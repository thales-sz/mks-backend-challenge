services:
  api01: &api
    build:
      context: .
      dockerfile: ./Dockerfile
      target: development
    command: npm run start:dev
    container_name: api-01
    hostname: api01
    environment:
      - POSTGRES_PASSWORD=123456
      - POSTGRES_USER=admin
      - POSTGRES_DB=mks-backend
      - POSTGRES_HOST=db
      - PORT=3030
    ports:
      - "3030:3030"
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - db

  api02:
    <<: *api
    hostname: api02
    container_name: api-02
    environment:
      - POSTGRES_PASSWORD=123456
      - POSTGRES_USER=admin
      - POSTGRES_DB=mks-backend
      - POSTGRES_HOST=db
      - PORT=3030
    ports:
      - "3031:3030"

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
    ports:
      - "9999:9999"
    restart: always

  db:
    image: postgres:16
    hostname: db
    environment:
      - POSTGRES_PASSWORD=123456
      - POSTGRES_USER=admin
      - POSTGRES_DB=mks-backend
    ports:
      - "5432:5432"
    command: postgres -c checkpoint_timeout=600 -c max_wal_size=4096

  redis:
    image: 'redis'
    container_name: 'redis-mks-backend'
    ports:
      - '6379:6379'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes

networks:
  default:
    driver: bridge
    name: mks-backend-nginx